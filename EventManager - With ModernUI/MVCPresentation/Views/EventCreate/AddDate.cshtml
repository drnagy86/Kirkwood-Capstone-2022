@model DataObjects.EventVM

@{
    ViewBag.Title = "Add Date";
}


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnUnkown").removeAttr("checked");
        $("#btnAddDate").click(function () {
            AnotherEventDate();
        });

    });

    $("#btnSaveEvent").click(function () {
        SaveEventRecord();
    });
    function RemoveDate(index) {
        $("#r" + index).remove();
    }
    function RemoveAllDates() {
        $("#tableEventDates").find("tr:gt(0)").remove();
    }

    function AnotherEventDate() {
        var index = $("#tableEventDates tr").length;
        var EventDates = "<tr id=" + "r" + index + "><td>" + $("#txtDate").val() + "</td><td>" + $("#txtStart").val() + "</td><td>" + $("#txtEnd").val() + "</td><td><input type='button' onClick='RemoveDate(" + index + ")'class ='btn-sm btn-danger' value='remove' /></td></tr>";
        var date = $("#txtDate").val().replace(/-0+/g, '-');
        var dateArr = date.split("-");
        var d = new Date();
        var today = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();
        var start = $("#txtStart").val();
        var end = $("#txtEnd").val();
        if ($("#txtDate").val().length > 0 && $("#txtStart").val().length > 0 && $("#txtEnd").val().length > 0) {
            if (start < end) {
                if (d.getFullYear() <= dateArr[0] && d.getMonth() <= dateArr[1] && d.getDay() <= dateArr[2]) {
                    $("#tableEventDates").last().append(EventDates);
                    $("#txtDate").val("");
                    $("#txtStart").val("");
                    $("#txtEnd").val("");
                } else {
                    alert("Date cannot be set in the past.");

                }
            }
            else {
                alert("End time cannot come before the start time.");
            }
        }
        else {
            alert("All fields are required.");
        }

    }
    function NoDates() {

        RemoveAllDates();
        SaveEventRecord(1);

    }
    function SaveEventRecord(unkown) {

        var EventDateList = new Array();


        if (unkown === 0 && $("#tableEventDates tr").length  <= 1) {
            alert("If this event doesnt have dates planned please select Unkown.");
        } else {
            if (unkown === 0) {
                $("#tableEventDates").find("tr:gt(0)").each(function () {
                    var Date = $(this).find("td:eq(0)").text();
                    var StartTime = $(this).find("td:eq(1)").text();
                    var EndTime = $(this).find("td:eq(2)").text();
                    if (Date.length > 0 && StartTime.length > 0 && EndTime.length > 0) {
                        var EventDate = {};
                        EventDate.EventID = $("#eventID").val();
                        EventDate.EventDateID = Date;
                        EventDate.StartTime = StartTime;
                        EventDate.EndTime = EndTime;

                        EventDateList.push(EventDate);
                    }

                });
            } else if (unkown === 1) {
                var EventDate = {};
                EventDate.EventID = $("#eventID").val();
                EventDate.Active = false;
                EventDateList.push(EventDate);
            }
            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf=8',
                url: '/EventCreate/AddDate',
                data: JSON.stringify(EventDateList),
                success: function (data) {
                    RemoveAllDates();
                    alert(data);
                    window.location = window.location.protocol + "//" + window.location.host + "/Home/Index"

                }
            });
        }
    }
</script>
@Html.HiddenFor(x => x.EventID, new { @id = "eventID" })



<div class="d-flex justify-content-center mt-5"><h2>Create Event</h2></div>
<div class="d-flex justify-content-center mt-2">
    
    <div class="col-md-2"></div>

    <div><h4>Add Date</h4></div>

    @using (Html.BeginForm("AddDate", "EventCreate", FormMethod.Post, new { @class = "w-50" }))
    {
        @Html.AntiForgeryToken()

        <div class="w-50 pt-5">
            <fieldset>


                <div class="d-flex flex-row">
                    @Html.CheckBox("isActive", false, new { @class = "btn btn-primary mt-1", onClick = "NoDates();" })
                    <label>Unkown date</label>
                </div>

                @Html.ValidationMessage("", new { @class = "text-danger" })


                <div class="form-group">
                    <label>Date</label>
                    @Html.TextBox("Date", null, new { @type = "date", @class = "form-control datepicker mb-3", name = "date", id = "txtDate" })

                </div>

                <div class="form-group">
                    <label>Start Time</label>
                    @Html.TextBox("StartTime", "", new { @type = "time", @class = "form-control timepicker mb-3", name = "start", id = "txtStart" })

                </div>

                <div class="form-group">
                    <label>End Time</label>
                    @Html.TextBox("EndTime", "", new { @type = "time", @class = "form-control timepicker", name = "end", id = "txtEnd" })
                </div>



                <div class="d-flex justify-content-center mt-3">
                    <input type="button" id="btnAddDate" class="btn btn-sm btn-primary" value="Add Date" />
                </div>

                <table class="mt-3" name="tbleEventDate" id="tableEventDates" style="width:100%;">
                    <thead>
                        <tr id="rLabel">

                            <th class="ps-4">Date</th>

                            <th class="ps-1">Start</th>

                            <th class="ps-2">End</th>
                        </tr>
                    </thead>
                </table>

                <div class="mt-5">
                    <div class="d-flex justify-content-center">
                        <input type="button" value="Next" name="saveEvent" id="btnSaveEvent" onclick="SaveEventRecord(0)" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "EventList", "Event", routeValues: null, htmlAttributes: new { @class = "btn btn-danger ms-2" })
                    </div>
                </div>

            </fieldset>
        </div>
    }
</div>

